{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Tarea Python 5.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#Tarea 5 - Taller de Python para Ciencias de Datos\n",
        "Por: Cristofer Alarcón, Felipe Espinoza y Francisco Salazar"
      ],
      "metadata": {
        "id": "q433Wwlk-hf4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 1. Importación y preparación de los datos de análisis"
      ],
      "metadata": {
        "id": "hHZP5wY4IBvS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se importan las librerías"
      ],
      "metadata": {
        "id": "QNnQ5KuztOO4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib as mpl\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "5NxSPxmAl6zI"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se carga el conjunto de datos (procesados en las tareas anteriores)"
      ],
      "metadata": {
        "id": "V1utv0aotRC1"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "KkbuykRkgeSu",
        "outputId": "066201e8-e8c1-42ff-9fb7-9aad8c7b2099"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     model  year  price transmission  mileage fuelType         tax   mpg  \\\n",
              "0   Fiesta  2017  12000    Automatic    15944   Petrol  113.417932  57.7   \n",
              "1    Focus  2018  14000       Manual     9083   Petrol  150.000000  57.7   \n",
              "2    Focus  2017  13000       Manual    12456   Petrol  150.000000  57.7   \n",
              "3   Fiesta  2019  17500       Manual    10460   Petrol  145.000000  40.3   \n",
              "4   Fiesta  2019  16500    Automatic     1482   Petrol  145.000000  48.7   \n",
              "5   Fiesta  2015  10500       Manual    35432   Petrol  113.417932  47.9   \n",
              "6     Puma  2019  22500       Manual     2029   Petrol  145.000000  50.4   \n",
              "7   Fiesta  2017   9000       Manual    13054   Petrol  113.417932  54.3   \n",
              "8     Kuga  2019  25500    Automatic     6894   Diesel  145.000000  42.2   \n",
              "9    Focus  2018  10000       Manual    48141   Petrol  113.417932  61.4   \n",
              "\n",
              "   engineSize  km/L           km  km/LNorm    kmNorm gastos-en-km/L  \\\n",
              "0         1.0    24  25659.31696  0.285927  0.089753           Bajo   \n",
              "1         1.0    24  14617.63522  0.285927  0.051130           Bajo   \n",
              "2         1.0    24  20045.93904  0.285927  0.070118           Bajo   \n",
              "3         1.5    17  16833.69640  0.199703  0.058882           Bajo   \n",
              "4         1.0    20   2385.04188  0.241328  0.008343           Bajo   \n",
              "5         1.6    20  57022.13488  0.237364  0.199455           Bajo   \n",
              "6         1.0    21   3265.35086  0.249752  0.011422           Bajo   \n",
              "7         1.2    23  21008.32436  0.269078  0.073484           Bajo   \n",
              "8         2.0    17  11094.78996  0.209118  0.038808           Bajo   \n",
              "9         1.0    26  77475.23694  0.304262  0.270997           Bajo   \n",
              "\n",
              "   Transmision Automatica  Transmision Manual  Transmision Semi-Automatica  \n",
              "0                       1                   0                            0  \n",
              "1                       0                   1                            0  \n",
              "2                       0                   1                            0  \n",
              "3                       0                   1                            0  \n",
              "4                       1                   0                            0  \n",
              "5                       0                   1                            0  \n",
              "6                       0                   1                            0  \n",
              "7                       0                   1                            0  \n",
              "8                       1                   0                            0  \n",
              "9                       0                   1                            0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d6b4a3d3-e56c-47f6-a1f2-98add3bd801e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>price</th>\n",
              "      <th>transmission</th>\n",
              "      <th>mileage</th>\n",
              "      <th>fuelType</th>\n",
              "      <th>tax</th>\n",
              "      <th>mpg</th>\n",
              "      <th>engineSize</th>\n",
              "      <th>km/L</th>\n",
              "      <th>km</th>\n",
              "      <th>km/LNorm</th>\n",
              "      <th>kmNorm</th>\n",
              "      <th>gastos-en-km/L</th>\n",
              "      <th>Transmision Automatica</th>\n",
              "      <th>Transmision Manual</th>\n",
              "      <th>Transmision Semi-Automatica</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2017</td>\n",
              "      <td>12000</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>15944</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>113.417932</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>25659.31696</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.089753</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2018</td>\n",
              "      <td>14000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>9083</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>14617.63522</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.051130</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2017</td>\n",
              "      <td>13000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>12456</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>20045.93904</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.070118</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2019</td>\n",
              "      <td>17500</td>\n",
              "      <td>Manual</td>\n",
              "      <td>10460</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>40.3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>17</td>\n",
              "      <td>16833.69640</td>\n",
              "      <td>0.199703</td>\n",
              "      <td>0.058882</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2019</td>\n",
              "      <td>16500</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>1482</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>48.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>20</td>\n",
              "      <td>2385.04188</td>\n",
              "      <td>0.241328</td>\n",
              "      <td>0.008343</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2015</td>\n",
              "      <td>10500</td>\n",
              "      <td>Manual</td>\n",
              "      <td>35432</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>113.417932</td>\n",
              "      <td>47.9</td>\n",
              "      <td>1.6</td>\n",
              "      <td>20</td>\n",
              "      <td>57022.13488</td>\n",
              "      <td>0.237364</td>\n",
              "      <td>0.199455</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Puma</td>\n",
              "      <td>2019</td>\n",
              "      <td>22500</td>\n",
              "      <td>Manual</td>\n",
              "      <td>2029</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>50.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>21</td>\n",
              "      <td>3265.35086</td>\n",
              "      <td>0.249752</td>\n",
              "      <td>0.011422</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2017</td>\n",
              "      <td>9000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>13054</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>113.417932</td>\n",
              "      <td>54.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>23</td>\n",
              "      <td>21008.32436</td>\n",
              "      <td>0.269078</td>\n",
              "      <td>0.073484</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Kuga</td>\n",
              "      <td>2019</td>\n",
              "      <td>25500</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>6894</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>42.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>17</td>\n",
              "      <td>11094.78996</td>\n",
              "      <td>0.209118</td>\n",
              "      <td>0.038808</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2018</td>\n",
              "      <td>10000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>48141</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>113.417932</td>\n",
              "      <td>61.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>26</td>\n",
              "      <td>77475.23694</td>\n",
              "      <td>0.304262</td>\n",
              "      <td>0.270997</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6b4a3d3-e56c-47f6-a1f2-98add3bd801e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d6b4a3d3-e56c-47f6-a1f2-98add3bd801e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d6b4a3d3-e56c-47f6-a1f2-98add3bd801e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "df = pd.read_csv(\"datos_vehiculos_procesados.csv\", skiprows=0, low_memory=False)\n",
        "df.head(10)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se comprueba si existen datos NaN"
      ],
      "metadata": {
        "id": "0sCgKPcGthOK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().any()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YUXIlySRrYlC",
        "outputId": "443c8777-0ec0-4671-a4eb-3fa3a4437ca1"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "model                          False\n",
              "year                           False\n",
              "price                          False\n",
              "transmission                   False\n",
              "mileage                        False\n",
              "fuelType                       False\n",
              "tax                            False\n",
              "mpg                            False\n",
              "engineSize                     False\n",
              "km/L                           False\n",
              "km                             False\n",
              "km/LNorm                       False\n",
              "kmNorm                         False\n",
              "gastos-en-km/L                 False\n",
              "Transmision Automatica         False\n",
              "Transmision Manual             False\n",
              "Transmision Semi-Automatica    False\n",
              "dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se muestra el dataframe completo"
      ],
      "metadata": {
        "id": "4M7dEVTXtlHm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "f5cOgflen7Sf",
        "outputId": "1faa2928-0e2b-479c-b542-bd5cac4585f0"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         model  year  price transmission  mileage fuelType         tax   mpg  \\\n",
              "0       Fiesta  2017  12000    Automatic    15944   Petrol  113.417932  57.7   \n",
              "1        Focus  2018  14000       Manual     9083   Petrol  150.000000  57.7   \n",
              "2        Focus  2017  13000       Manual    12456   Petrol  150.000000  57.7   \n",
              "3       Fiesta  2019  17500       Manual    10460   Petrol  145.000000  40.3   \n",
              "4       Fiesta  2019  16500    Automatic     1482   Petrol  145.000000  48.7   \n",
              "...        ...   ...    ...          ...      ...      ...         ...   ...   \n",
              "17961    B-MAX  2017   8999       Manual    16700   Petrol  150.000000  47.1   \n",
              "17962    B-MAX  2014   7499       Manual    40700   Petrol   30.000000  57.7   \n",
              "17963    Focus  2015   9999       Manual     7010   Diesel   20.000000  67.3   \n",
              "17964       KA  2018   8299       Manual     5007   Petrol  145.000000  57.7   \n",
              "17965    Focus  2015   8299       Manual     5007   Petrol   22.000000  57.7   \n",
              "\n",
              "       engineSize  km/L           km  km/LNorm    kmNorm gastos-en-km/L  \\\n",
              "0             1.0    24  25659.31696  0.285927  0.089753           Bajo   \n",
              "1             1.0    24  14617.63522  0.285927  0.051130           Bajo   \n",
              "2             1.0    24  20045.93904  0.285927  0.070118           Bajo   \n",
              "3             1.5    17  16833.69640  0.199703  0.058882           Bajo   \n",
              "4             1.0    20   2385.04188  0.241328  0.008343           Bajo   \n",
              "...           ...   ...          ...       ...       ...            ...   \n",
              "17961         1.4    20  26875.97800  0.233399  0.094008           Bajo   \n",
              "17962         1.0    24  65500.13800  0.285927  0.229110           Bajo   \n",
              "17963         1.6    28  11281.47340  0.333499  0.039461           Bajo   \n",
              "17964         1.2    24   8057.96538  0.285927  0.028186           Bajo   \n",
              "17965         1.0    24   8057.96538  0.285927  0.028186           Bajo   \n",
              "\n",
              "       Transmision Automatica  Transmision Manual  Transmision Semi-Automatica  \n",
              "0                           1                   0                            0  \n",
              "1                           0                   1                            0  \n",
              "2                           0                   1                            0  \n",
              "3                           0                   1                            0  \n",
              "4                           1                   0                            0  \n",
              "...                       ...                 ...                          ...  \n",
              "17961                       0                   1                            0  \n",
              "17962                       0                   1                            0  \n",
              "17963                       0                   1                            0  \n",
              "17964                       0                   1                            0  \n",
              "17965                       0                   1                            0  \n",
              "\n",
              "[17966 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0133f8dd-84db-483a-86bb-e4a5ed4f3eb5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>price</th>\n",
              "      <th>transmission</th>\n",
              "      <th>mileage</th>\n",
              "      <th>fuelType</th>\n",
              "      <th>tax</th>\n",
              "      <th>mpg</th>\n",
              "      <th>engineSize</th>\n",
              "      <th>km/L</th>\n",
              "      <th>km</th>\n",
              "      <th>km/LNorm</th>\n",
              "      <th>kmNorm</th>\n",
              "      <th>gastos-en-km/L</th>\n",
              "      <th>Transmision Automatica</th>\n",
              "      <th>Transmision Manual</th>\n",
              "      <th>Transmision Semi-Automatica</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2017</td>\n",
              "      <td>12000</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>15944</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>113.417932</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>25659.31696</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.089753</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2018</td>\n",
              "      <td>14000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>9083</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>14617.63522</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.051130</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2017</td>\n",
              "      <td>13000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>12456</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>20045.93904</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.070118</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2019</td>\n",
              "      <td>17500</td>\n",
              "      <td>Manual</td>\n",
              "      <td>10460</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>40.3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>17</td>\n",
              "      <td>16833.69640</td>\n",
              "      <td>0.199703</td>\n",
              "      <td>0.058882</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2019</td>\n",
              "      <td>16500</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>1482</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>48.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>20</td>\n",
              "      <td>2385.04188</td>\n",
              "      <td>0.241328</td>\n",
              "      <td>0.008343</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17961</th>\n",
              "      <td>B-MAX</td>\n",
              "      <td>2017</td>\n",
              "      <td>8999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>16700</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>47.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>20</td>\n",
              "      <td>26875.97800</td>\n",
              "      <td>0.233399</td>\n",
              "      <td>0.094008</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17962</th>\n",
              "      <td>B-MAX</td>\n",
              "      <td>2014</td>\n",
              "      <td>7499</td>\n",
              "      <td>Manual</td>\n",
              "      <td>40700</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>65500.13800</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.229110</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17963</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2015</td>\n",
              "      <td>9999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>7010</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>67.3</td>\n",
              "      <td>1.6</td>\n",
              "      <td>28</td>\n",
              "      <td>11281.47340</td>\n",
              "      <td>0.333499</td>\n",
              "      <td>0.039461</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17964</th>\n",
              "      <td>KA</td>\n",
              "      <td>2018</td>\n",
              "      <td>8299</td>\n",
              "      <td>Manual</td>\n",
              "      <td>5007</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.2</td>\n",
              "      <td>24</td>\n",
              "      <td>8057.96538</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.028186</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17965</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2015</td>\n",
              "      <td>8299</td>\n",
              "      <td>Manual</td>\n",
              "      <td>5007</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>8057.96538</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.028186</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>17966 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0133f8dd-84db-483a-86bb-e4a5ed4f3eb5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0133f8dd-84db-483a-86bb-e4a5ed4f3eb5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0133f8dd-84db-483a-86bb-e4a5ed4f3eb5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Limpieza de datos para evitar outliers"
      ],
      "metadata": {
        "id": "V3Pdoody_lRG"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Primero, se eliminarán los datos que tengan un tipo de combustible híbrido"
      ],
      "metadata": {
        "id": "HoKlrJhCtqJB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "drop1 = df[(df.fuelType == 'Hybrid')].index\n",
        "df.drop(drop1, inplace=True)\n",
        "\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "b-CG_zeZrc1x",
        "outputId": "3fa5cd6c-c932-41dc-8e4f-a136d81243b1"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         model  year  price transmission  mileage fuelType         tax   mpg  \\\n",
              "0       Fiesta  2017  12000    Automatic    15944   Petrol  113.417932  57.7   \n",
              "1        Focus  2018  14000       Manual     9083   Petrol  150.000000  57.7   \n",
              "2        Focus  2017  13000       Manual    12456   Petrol  150.000000  57.7   \n",
              "3       Fiesta  2019  17500       Manual    10460   Petrol  145.000000  40.3   \n",
              "4       Fiesta  2019  16500    Automatic     1482   Petrol  145.000000  48.7   \n",
              "...        ...   ...    ...          ...      ...      ...         ...   ...   \n",
              "17961    B-MAX  2017   8999       Manual    16700   Petrol  150.000000  47.1   \n",
              "17962    B-MAX  2014   7499       Manual    40700   Petrol   30.000000  57.7   \n",
              "17963    Focus  2015   9999       Manual     7010   Diesel   20.000000  67.3   \n",
              "17964       KA  2018   8299       Manual     5007   Petrol  145.000000  57.7   \n",
              "17965    Focus  2015   8299       Manual     5007   Petrol   22.000000  57.7   \n",
              "\n",
              "       engineSize  km/L           km  km/LNorm    kmNorm gastos-en-km/L  \\\n",
              "0             1.0    24  25659.31696  0.285927  0.089753           Bajo   \n",
              "1             1.0    24  14617.63522  0.285927  0.051130           Bajo   \n",
              "2             1.0    24  20045.93904  0.285927  0.070118           Bajo   \n",
              "3             1.5    17  16833.69640  0.199703  0.058882           Bajo   \n",
              "4             1.0    20   2385.04188  0.241328  0.008343           Bajo   \n",
              "...           ...   ...          ...       ...       ...            ...   \n",
              "17961         1.4    20  26875.97800  0.233399  0.094008           Bajo   \n",
              "17962         1.0    24  65500.13800  0.285927  0.229110           Bajo   \n",
              "17963         1.6    28  11281.47340  0.333499  0.039461           Bajo   \n",
              "17964         1.2    24   8057.96538  0.285927  0.028186           Bajo   \n",
              "17965         1.0    24   8057.96538  0.285927  0.028186           Bajo   \n",
              "\n",
              "       Transmision Automatica  Transmision Manual  Transmision Semi-Automatica  \n",
              "0                           1                   0                            0  \n",
              "1                           0                   1                            0  \n",
              "2                           0                   1                            0  \n",
              "3                           0                   1                            0  \n",
              "4                           1                   0                            0  \n",
              "...                       ...                 ...                          ...  \n",
              "17961                       0                   1                            0  \n",
              "17962                       0                   1                            0  \n",
              "17963                       0                   1                            0  \n",
              "17964                       0                   1                            0  \n",
              "17965                       0                   1                            0  \n",
              "\n",
              "[17944 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2d2ab69d-761b-4e96-8314-908fcc4057cd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>price</th>\n",
              "      <th>transmission</th>\n",
              "      <th>mileage</th>\n",
              "      <th>fuelType</th>\n",
              "      <th>tax</th>\n",
              "      <th>mpg</th>\n",
              "      <th>engineSize</th>\n",
              "      <th>km/L</th>\n",
              "      <th>km</th>\n",
              "      <th>km/LNorm</th>\n",
              "      <th>kmNorm</th>\n",
              "      <th>gastos-en-km/L</th>\n",
              "      <th>Transmision Automatica</th>\n",
              "      <th>Transmision Manual</th>\n",
              "      <th>Transmision Semi-Automatica</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2017</td>\n",
              "      <td>12000</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>15944</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>113.417932</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>25659.31696</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.089753</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2018</td>\n",
              "      <td>14000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>9083</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>14617.63522</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.051130</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2017</td>\n",
              "      <td>13000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>12456</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>20045.93904</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.070118</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2019</td>\n",
              "      <td>17500</td>\n",
              "      <td>Manual</td>\n",
              "      <td>10460</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>40.3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>17</td>\n",
              "      <td>16833.69640</td>\n",
              "      <td>0.199703</td>\n",
              "      <td>0.058882</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2019</td>\n",
              "      <td>16500</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>1482</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>48.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>20</td>\n",
              "      <td>2385.04188</td>\n",
              "      <td>0.241328</td>\n",
              "      <td>0.008343</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17961</th>\n",
              "      <td>B-MAX</td>\n",
              "      <td>2017</td>\n",
              "      <td>8999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>16700</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>47.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>20</td>\n",
              "      <td>26875.97800</td>\n",
              "      <td>0.233399</td>\n",
              "      <td>0.094008</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17962</th>\n",
              "      <td>B-MAX</td>\n",
              "      <td>2014</td>\n",
              "      <td>7499</td>\n",
              "      <td>Manual</td>\n",
              "      <td>40700</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>65500.13800</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.229110</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17963</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2015</td>\n",
              "      <td>9999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>7010</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>67.3</td>\n",
              "      <td>1.6</td>\n",
              "      <td>28</td>\n",
              "      <td>11281.47340</td>\n",
              "      <td>0.333499</td>\n",
              "      <td>0.039461</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17964</th>\n",
              "      <td>KA</td>\n",
              "      <td>2018</td>\n",
              "      <td>8299</td>\n",
              "      <td>Manual</td>\n",
              "      <td>5007</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.2</td>\n",
              "      <td>24</td>\n",
              "      <td>8057.96538</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.028186</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17965</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2015</td>\n",
              "      <td>8299</td>\n",
              "      <td>Manual</td>\n",
              "      <td>5007</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>8057.96538</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.028186</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>17944 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d2ab69d-761b-4e96-8314-908fcc4057cd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2d2ab69d-761b-4e96-8314-908fcc4057cd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2d2ab69d-761b-4e96-8314-908fcc4057cd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Luego, se eliminan los datos que tengan un año igual a 2060 "
      ],
      "metadata": {
        "id": "fcrxdwWGtzGL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "drop2 = df[(df.year == 2060)].index\n",
        "df.drop(drop2, inplace=True)\n",
        "\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "xZvU8ivurgkK",
        "outputId": "f54452b3-7992-4a66-80a5-ff9409b9ef58"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         model  year  price transmission  mileage fuelType         tax   mpg  \\\n",
              "0       Fiesta  2017  12000    Automatic    15944   Petrol  113.417932  57.7   \n",
              "1        Focus  2018  14000       Manual     9083   Petrol  150.000000  57.7   \n",
              "2        Focus  2017  13000       Manual    12456   Petrol  150.000000  57.7   \n",
              "3       Fiesta  2019  17500       Manual    10460   Petrol  145.000000  40.3   \n",
              "4       Fiesta  2019  16500    Automatic     1482   Petrol  145.000000  48.7   \n",
              "...        ...   ...    ...          ...      ...      ...         ...   ...   \n",
              "17961    B-MAX  2017   8999       Manual    16700   Petrol  150.000000  47.1   \n",
              "17962    B-MAX  2014   7499       Manual    40700   Petrol   30.000000  57.7   \n",
              "17963    Focus  2015   9999       Manual     7010   Diesel   20.000000  67.3   \n",
              "17964       KA  2018   8299       Manual     5007   Petrol  145.000000  57.7   \n",
              "17965    Focus  2015   8299       Manual     5007   Petrol   22.000000  57.7   \n",
              "\n",
              "       engineSize  km/L           km  km/LNorm    kmNorm gastos-en-km/L  \\\n",
              "0             1.0    24  25659.31696  0.285927  0.089753           Bajo   \n",
              "1             1.0    24  14617.63522  0.285927  0.051130           Bajo   \n",
              "2             1.0    24  20045.93904  0.285927  0.070118           Bajo   \n",
              "3             1.5    17  16833.69640  0.199703  0.058882           Bajo   \n",
              "4             1.0    20   2385.04188  0.241328  0.008343           Bajo   \n",
              "...           ...   ...          ...       ...       ...            ...   \n",
              "17961         1.4    20  26875.97800  0.233399  0.094008           Bajo   \n",
              "17962         1.0    24  65500.13800  0.285927  0.229110           Bajo   \n",
              "17963         1.6    28  11281.47340  0.333499  0.039461           Bajo   \n",
              "17964         1.2    24   8057.96538  0.285927  0.028186           Bajo   \n",
              "17965         1.0    24   8057.96538  0.285927  0.028186           Bajo   \n",
              "\n",
              "       Transmision Automatica  Transmision Manual  Transmision Semi-Automatica  \n",
              "0                           1                   0                            0  \n",
              "1                           0                   1                            0  \n",
              "2                           0                   1                            0  \n",
              "3                           0                   1                            0  \n",
              "4                           1                   0                            0  \n",
              "...                       ...                 ...                          ...  \n",
              "17961                       0                   1                            0  \n",
              "17962                       0                   1                            0  \n",
              "17963                       0                   1                            0  \n",
              "17964                       0                   1                            0  \n",
              "17965                       0                   1                            0  \n",
              "\n",
              "[17943 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5da129c9-72a5-468c-b87f-18f572d16db4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>price</th>\n",
              "      <th>transmission</th>\n",
              "      <th>mileage</th>\n",
              "      <th>fuelType</th>\n",
              "      <th>tax</th>\n",
              "      <th>mpg</th>\n",
              "      <th>engineSize</th>\n",
              "      <th>km/L</th>\n",
              "      <th>km</th>\n",
              "      <th>km/LNorm</th>\n",
              "      <th>kmNorm</th>\n",
              "      <th>gastos-en-km/L</th>\n",
              "      <th>Transmision Automatica</th>\n",
              "      <th>Transmision Manual</th>\n",
              "      <th>Transmision Semi-Automatica</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2017</td>\n",
              "      <td>12000</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>15944</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>113.417932</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>25659.31696</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.089753</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2018</td>\n",
              "      <td>14000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>9083</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>14617.63522</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.051130</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2017</td>\n",
              "      <td>13000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>12456</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>20045.93904</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.070118</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2019</td>\n",
              "      <td>17500</td>\n",
              "      <td>Manual</td>\n",
              "      <td>10460</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>40.3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>17</td>\n",
              "      <td>16833.69640</td>\n",
              "      <td>0.199703</td>\n",
              "      <td>0.058882</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Fiesta</td>\n",
              "      <td>2019</td>\n",
              "      <td>16500</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>1482</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>48.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>20</td>\n",
              "      <td>2385.04188</td>\n",
              "      <td>0.241328</td>\n",
              "      <td>0.008343</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17961</th>\n",
              "      <td>B-MAX</td>\n",
              "      <td>2017</td>\n",
              "      <td>8999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>16700</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>47.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>20</td>\n",
              "      <td>26875.97800</td>\n",
              "      <td>0.233399</td>\n",
              "      <td>0.094008</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17962</th>\n",
              "      <td>B-MAX</td>\n",
              "      <td>2014</td>\n",
              "      <td>7499</td>\n",
              "      <td>Manual</td>\n",
              "      <td>40700</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>65500.13800</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.229110</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17963</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2015</td>\n",
              "      <td>9999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>7010</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>67.3</td>\n",
              "      <td>1.6</td>\n",
              "      <td>28</td>\n",
              "      <td>11281.47340</td>\n",
              "      <td>0.333499</td>\n",
              "      <td>0.039461</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17964</th>\n",
              "      <td>KA</td>\n",
              "      <td>2018</td>\n",
              "      <td>8299</td>\n",
              "      <td>Manual</td>\n",
              "      <td>5007</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.2</td>\n",
              "      <td>24</td>\n",
              "      <td>8057.96538</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.028186</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17965</th>\n",
              "      <td>Focus</td>\n",
              "      <td>2015</td>\n",
              "      <td>8299</td>\n",
              "      <td>Manual</td>\n",
              "      <td>5007</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>57.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>8057.96538</td>\n",
              "      <td>0.285927</td>\n",
              "      <td>0.028186</td>\n",
              "      <td>Bajo</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>17943 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5da129c9-72a5-468c-b87f-18f572d16db4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5da129c9-72a5-468c-b87f-18f572d16db4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5da129c9-72a5-468c-b87f-18f572d16db4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Teniendo en cuenta el nuevo dataframe, se muestra un resumen estadistico de los datos"
      ],
      "metadata": {
        "id": "GpI9fYast3Mh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 362
        },
        "id": "SlCcjM98l9JE",
        "outputId": "fe253d75-0626-4455-a358-75978dda2562"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               year         price        mileage           tax           mpg  \\\n",
              "count  17943.000000  17943.000000   17943.000000  17943.000000  17943.000000   \n",
              "mean    2016.862342  12267.756117   23361.788887    113.428444     57.869977   \n",
              "std        2.024705   4724.015878   19451.992923     61.873713      9.838289   \n",
              "min     1996.000000    495.000000       1.000000      0.000000     20.800000   \n",
              "25%     2016.000000   8999.000000    9998.000000     30.000000     52.300000   \n",
              "50%     2017.000000  11290.000000   18250.000000    145.000000     58.900000   \n",
              "75%     2018.000000  15296.500000   31046.500000    145.000000     65.700000   \n",
              "max     2020.000000  54995.000000  177644.000000    580.000000     88.300000   \n",
              "\n",
              "         engineSize          km/L             km      km/LNorm        kmNorm  \\\n",
              "count  17943.000000  17943.000000   17943.000000  17943.000000  17943.000000   \n",
              "mean       1.349980     24.136209   37597.061327      0.286769      0.131509   \n",
              "std        0.431665      4.126410   31304.870290      0.048753      0.109500   \n",
              "min        0.000000      8.000000       1.609340      0.103072      0.000006   \n",
              "25%        1.000000     22.000000   16090.181320      0.259167      0.056281   \n",
              "50%        1.200000     25.000000   29370.455000      0.291873      0.102734   \n",
              "75%        1.500000     27.000000   49964.374310      0.325570      0.174768   \n",
              "max        5.000000     37.000000  285889.594960      0.437562      1.000000   \n",
              "\n",
              "       Transmision Automatica  Transmision Manual  Transmision Semi-Automatica  \n",
              "count            17943.000000        17943.000000                 17943.000000  \n",
              "mean                 0.074737            0.864794                     0.060469  \n",
              "std                  0.262973            0.341953                     0.238361  \n",
              "min                  0.000000            0.000000                     0.000000  \n",
              "25%                  0.000000            1.000000                     0.000000  \n",
              "50%                  0.000000            1.000000                     0.000000  \n",
              "75%                  0.000000            1.000000                     0.000000  \n",
              "max                  1.000000            1.000000                     1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ca4e8f5f-4c27-4b73-933d-f17b2e0f0ece\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>year</th>\n",
              "      <th>price</th>\n",
              "      <th>mileage</th>\n",
              "      <th>tax</th>\n",
              "      <th>mpg</th>\n",
              "      <th>engineSize</th>\n",
              "      <th>km/L</th>\n",
              "      <th>km</th>\n",
              "      <th>km/LNorm</th>\n",
              "      <th>kmNorm</th>\n",
              "      <th>Transmision Automatica</th>\n",
              "      <th>Transmision Manual</th>\n",
              "      <th>Transmision Semi-Automatica</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "      <td>17943.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2016.862342</td>\n",
              "      <td>12267.756117</td>\n",
              "      <td>23361.788887</td>\n",
              "      <td>113.428444</td>\n",
              "      <td>57.869977</td>\n",
              "      <td>1.349980</td>\n",
              "      <td>24.136209</td>\n",
              "      <td>37597.061327</td>\n",
              "      <td>0.286769</td>\n",
              "      <td>0.131509</td>\n",
              "      <td>0.074737</td>\n",
              "      <td>0.864794</td>\n",
              "      <td>0.060469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.024705</td>\n",
              "      <td>4724.015878</td>\n",
              "      <td>19451.992923</td>\n",
              "      <td>61.873713</td>\n",
              "      <td>9.838289</td>\n",
              "      <td>0.431665</td>\n",
              "      <td>4.126410</td>\n",
              "      <td>31304.870290</td>\n",
              "      <td>0.048753</td>\n",
              "      <td>0.109500</td>\n",
              "      <td>0.262973</td>\n",
              "      <td>0.341953</td>\n",
              "      <td>0.238361</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1996.000000</td>\n",
              "      <td>495.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>20.800000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>1.609340</td>\n",
              "      <td>0.103072</td>\n",
              "      <td>0.000006</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2016.000000</td>\n",
              "      <td>8999.000000</td>\n",
              "      <td>9998.000000</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>52.300000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>16090.181320</td>\n",
              "      <td>0.259167</td>\n",
              "      <td>0.056281</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2017.000000</td>\n",
              "      <td>11290.000000</td>\n",
              "      <td>18250.000000</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>58.900000</td>\n",
              "      <td>1.200000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>29370.455000</td>\n",
              "      <td>0.291873</td>\n",
              "      <td>0.102734</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2018.000000</td>\n",
              "      <td>15296.500000</td>\n",
              "      <td>31046.500000</td>\n",
              "      <td>145.000000</td>\n",
              "      <td>65.700000</td>\n",
              "      <td>1.500000</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>49964.374310</td>\n",
              "      <td>0.325570</td>\n",
              "      <td>0.174768</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2020.000000</td>\n",
              "      <td>54995.000000</td>\n",
              "      <td>177644.000000</td>\n",
              "      <td>580.000000</td>\n",
              "      <td>88.300000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>285889.594960</td>\n",
              "      <td>0.437562</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca4e8f5f-4c27-4b73-933d-f17b2e0f0ece')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ca4e8f5f-4c27-4b73-933d-f17b2e0f0ece button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ca4e8f5f-4c27-4b73-933d-f17b2e0f0ece');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Total de columnas y el tipo de cada dato"
      ],
      "metadata": {
        "id": "rayexf5tt6ov"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3Yt1fz8hmNWJ",
        "outputId": "b39125e0-6ea4-40c1-d7f2-4fbd68c67fc9"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 17943 entries, 0 to 17965\n",
            "Data columns (total 17 columns):\n",
            " #   Column                       Non-Null Count  Dtype  \n",
            "---  ------                       --------------  -----  \n",
            " 0   model                        17943 non-null  object \n",
            " 1   year                         17943 non-null  int64  \n",
            " 2   price                        17943 non-null  int64  \n",
            " 3   transmission                 17943 non-null  object \n",
            " 4   mileage                      17943 non-null  int64  \n",
            " 5   fuelType                     17943 non-null  object \n",
            " 6   tax                          17943 non-null  float64\n",
            " 7   mpg                          17943 non-null  float64\n",
            " 8   engineSize                   17943 non-null  float64\n",
            " 9   km/L                         17943 non-null  int64  \n",
            " 10  km                           17943 non-null  float64\n",
            " 11  km/LNorm                     17943 non-null  float64\n",
            " 12  kmNorm                       17943 non-null  float64\n",
            " 13  gastos-en-km/L               17943 non-null  object \n",
            " 14  Transmision Automatica       17943 non-null  int64  \n",
            " 15  Transmision Manual           17943 non-null  int64  \n",
            " 16  Transmision Semi-Automatica  17943 non-null  int64  \n",
            "dtypes: float64(6), int64(7), object(4)\n",
            "memory usage: 2.5+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se seleccionan algunas características o atributos del conjunto de datos para realizar una exploración más detallada. "
      ],
      "metadata": {
        "id": "3WAqLCJGt96E"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cdf = df[['price','mileage','mpg','year']]\n",
        "cdf.head(9)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "id": "LNhFvGytmD5l",
        "outputId": "baccbf04-9fa2-45ef-db38-cb43c392259b"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   price  mileage   mpg  year\n",
              "0  12000    15944  57.7  2017\n",
              "1  14000     9083  57.7  2018\n",
              "2  13000    12456  57.7  2017\n",
              "3  17500    10460  40.3  2019\n",
              "4  16500     1482  48.7  2019\n",
              "5  10500    35432  47.9  2015\n",
              "6  22500     2029  50.4  2019\n",
              "7   9000    13054  54.3  2017\n",
              "8  25500     6894  42.2  2019"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b011bc23-a830-4be4-bd9a-a23e16e6fa1d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "      <th>mileage</th>\n",
              "      <th>mpg</th>\n",
              "      <th>year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>12000</td>\n",
              "      <td>15944</td>\n",
              "      <td>57.7</td>\n",
              "      <td>2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>14000</td>\n",
              "      <td>9083</td>\n",
              "      <td>57.7</td>\n",
              "      <td>2018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13000</td>\n",
              "      <td>12456</td>\n",
              "      <td>57.7</td>\n",
              "      <td>2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>17500</td>\n",
              "      <td>10460</td>\n",
              "      <td>40.3</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>16500</td>\n",
              "      <td>1482</td>\n",
              "      <td>48.7</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>10500</td>\n",
              "      <td>35432</td>\n",
              "      <td>47.9</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>22500</td>\n",
              "      <td>2029</td>\n",
              "      <td>50.4</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9000</td>\n",
              "      <td>13054</td>\n",
              "      <td>54.3</td>\n",
              "      <td>2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>25500</td>\n",
              "      <td>6894</td>\n",
              "      <td>42.2</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b011bc23-a830-4be4-bd9a-a23e16e6fa1d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b011bc23-a830-4be4-bd9a-a23e16e6fa1d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b011bc23-a830-4be4-bd9a-a23e16e6fa1d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Con el nuevo dataframe se realizan gráficos de distribución para los atributos seleccionados:"
      ],
      "metadata": {
        "id": "aacjhFxOuD0k"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "visualizar = cdf[['price','mileage','mpg','year']]\n",
        "visualizar.hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "VfBJCs0iqYUG",
        "outputId": "e94c5c3c-d70d-44fe-fe8f-f0b096222d6d"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora se graficarán las variables seleccionadas anteriormente con respecto a la variable `mileage`, para conocer su relación\n"
      ],
      "metadata": {
        "id": "PMznbGSFuGyk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(cdf.price, cdf.mileage,  color='blue')\n",
        "plt.xlabel(\"Precio\")\n",
        "plt.ylabel(\"Millas recorridas\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "tJU-lIt2qjhj",
        "outputId": "b425f8ba-796e-4143-eb97-0f564a820659"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(cdf.mpg, cdf.mileage,  color='blue')\n",
        "plt.xlabel(\"mpg\")\n",
        "plt.ylabel(\"Millas recorridas\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "kWuTOVQcqyiy",
        "outputId": "0f432624-e8ba-4169-ff44-fa00aab6bad8"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(cdf.year, cdf.mileage,  color='blue')\n",
        "plt.xlabel(\"year\")\n",
        "plt.ylabel(\"Millas recorridas\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "6XwUk6kUryRh",
        "outputId": "659c05ec-c42d-4d34-9629-c783c5e0b89d"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Crear los conjuntos de datos de prueba y entrenamiento"
      ],
      "metadata": {
        "id": "Jq4_9pEv1aSe"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        " Los datos se separan en distintos conjuntos, ya que esto proporcionará una \n",
        "evaluación más precisa para los nuevos datos que se generen porque el conjunto \n",
        "de datos de prueba no es parte del conjunto de datos que se utilizó para entrenar los datos. Es más realista para los problemas del mundo real."
      ],
      "metadata": {
        "id": "TVZ3Pv78D9WQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se procederá a dividir el conjunto de datos en conjuntos de entrenamiento y prueba, el 80% de los datos para entrenamiento y el 20% para pruebas. Se creará una máscara para seleccionar filas aleatorias usando la función **np.random.rand()**:"
      ],
      "metadata": {
        "id": "QdHtHdcSuQbj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "mascara = np.random.rand(len(df)) < 0.8\n",
        "entrena = cdf[mascara]\n",
        "prueba = cdf[~mascara]\n",
        "len(entrena)"
      ],
      "metadata": {
        "id": "JHyUTEIK1ZeU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "34f7ba27-4a93-4fef-9159-8f97fdaf3170"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "14349"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#2. Modelo de regresion simple <a id=\"4\"></a>\n"
      ],
      "metadata": {
        "id": "4O-s0mTG2sF_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "La regresión lineal ajusta un modelo lineal con coeficientes $\\theta = (\\theta_1, ..., \\theta_n)$ para minimizar la *suma de cuadrados residual* entre la variable independiente $x$ en el conjunto de datos y la variable dependiente $y$ para la aproximación lineal."
      ],
      "metadata": {
        "id": "_B9oTQACE_VW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Distribución de los datos de entrenamiento"
      ],
      "metadata": {
        "id": "PXvXukwYGYDq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Grafico de dispersión entre precio y millas recorridas, que serán los datos a modelar"
      ],
      "metadata": {
        "id": "KeemQns4uXHw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(entrena.price, entrena.mileage,  color='blue')\n",
        "plt.xlabel(\"Price\")\n",
        "plt.ylabel(\"Millas recorridas\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "WAMsPc5q1dWx",
        "outputId": "f056cbc5-b817-41c4-d214-85c82d16dcca"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Modelado"
      ],
      "metadata": {
        "id": "XEnEhjnFGSX1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Para crear un modelo de regresión lineal de los datos se debe usar el paquete `sklearn`.\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "Se muestra el coeficiente y la intersección de la función, que son los parámetros de la línea de ajuste.\n"
      ],
      "metadata": {
        "id": "UWnwm9-tGhXj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn import linear_model\n",
        "\n",
        "regresion_lineal = linear_model.LinearRegression()\n",
        "entrena_x = np.asanyarray(entrena[['price']])\n",
        "entrena_y = np.asanyarray(entrena[['mileage']])\n",
        "regresion_lineal.fit (entrena_x, entrena_y)\n",
        "\n",
        "# Los coeficientes\n",
        "print ('Coeficientes: ', regresion_lineal.coef_)\n",
        "print ('Intersección: ',regresion_lineal.intercept_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4hZC9_jG4CpT",
        "outputId": "e680edf1-8162-43ae-beb9-4ddfe51664e9"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Coeficientes:  [[-2.19129331]]\n",
            "Intersección:  [50390.10846135]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Graficar los Resultados\n"
      ],
      "metadata": {
        "id": "Bmydnlff4ItX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora, se puede graficar la línea de ajuste sobre los datos, calculada anteriormente"
      ],
      "metadata": {
        "id": "CyUSrBPLHEPe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(entrena.price, entrena.mileage,  color='blue')\n",
        "plt.plot(entrena_x, regresion_lineal.coef_[0][0]*entrena_x + regresion_lineal.intercept_[0], '-r')\n",
        "plt.xlabel(\"Precio\")\n",
        "plt.ylabel(\"Millas recorridas\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "I-vZPPpt4Lie",
        "outputId": "df4f8812-c119-48d4-947a-034b31cde0ce"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Millas recorridas')"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se puede apreciar que la forma de distribución de los datos, no se comporta de forma lineal, sino que se comporta más similar a una forma de tipo y=1/x, por lo que habría que comprobar si un modelo de esas caracteristicas se podría adaptar a los datos que existen actualmente.\n",
        "\n"
      ],
      "metadata": {
        "id": "ETNHFdhZZP7z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import r2_score\n",
        "\n",
        "prueba_x = np.asanyarray(prueba[['price']])\n",
        "prueba_y = np.asanyarray(prueba[['mileage']])\n",
        "prueba_y_hat = regresion_lineal.predict(prueba_x)\n",
        "\n",
        "print(\"Error absoluto medio: %.2f\" % np.mean(np.absolute(prueba_y_hat - prueba_y)))\n",
        "print(\"Error cuadrático medio (MSE): %.2f\" % np.mean((prueba_y_hat - prueba_y) ** 2))\n",
        "print(\"Calificación R²: %.2f\" % r2_score(prueba_y_hat , prueba_y) )"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mQ8nTi_z5tJL",
        "outputId": "40320d1b-80d7-4817-f86c-77c3d12972e5"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Error absoluto medio: 12025.75\n",
            "Error cuadrático medio (MSE): 259648746.93\n",
            "Calificación R²: -1.43\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 3. Modelo de regresión no lineal"
      ],
      "metadata": {
        "id": "jdTP7nBW-kOq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Las regresiones no lineales son una relación entre las variables independientes $x$ y una variable dependiente $y$ que dan como resultado datos modelados de una función no lineal. Esencialmente, cualquier relación que no sea lineal puede denominarse no lineal y, por lo general, se representa mediante el polinomio de $k$ grados (potencia máxima de $x$)."
      ],
      "metadata": {
        "id": "Lclsj-qeIf_V"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se usará un modelo de regresion de tipo y=a/x (hipérbola), el cual sería representativo del modelo, debido a que la recta no era representativa"
      ],
      "metadata": {
        "id": "8DPDAi-dQTym"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ejemplo con datos generados aleatoriamente"
      ],
      "metadata": {
        "id": "FLn_Cw_RQbYs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.arange(0.1, 5.0, 0.1)\n",
        "\n",
        "y = (1/x)\n",
        "y_ruido = 0.3 * np.random.normal(size=x.size)\n",
        "y_datos = y + y_ruido\n",
        "\n",
        "plt.plot(x, y_datos, 'bo')\n",
        "plt.plot(x,y, 'r') \n",
        "plt.ylabel('Variable Dependiente')\n",
        "plt.xlabel('Variable Indepdendiente')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "gOyxtMHZQTfO",
        "outputId": "bc9526e0-cfb4-4e12-fc3f-b8be53117b32"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Implementacion con el grafico de dispersion entre 'price' y 'mileage'"
      ],
      "metadata": {
        "id": "Q1aG5EC7QkYC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(entrena.price, entrena.mileage, 'ro')\n",
        "plt.xlabel(\"Precio\")\n",
        "plt.ylabel(\"Millas recorridas\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "wxpWboEAUGRG",
        "outputId": "78a050b3-e534-4cf7-d4fa-644d8752cfce"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Millas recorridas')"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se crea una función que simplemente divide dos números."
      ],
      "metadata": {
        "id": "UMoKr_HPhO6m"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def frac(x, Beta_1):\n",
        "     y = Beta_1/x\n",
        "     return y"
      ],
      "metadata": {
        "id": "sMkPVWu-dBpL"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Linea azul corresponde a varias hiberboles que atraviesan los datos"
      ],
      "metadata": {
        "id": "yjqN67x6vJCI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "beta_1 = 0.770818\n",
        "\n",
        "# función logística\n",
        "y_hat = frac(entrena.price, beta_1)\n",
        "\n",
        "# graficar pronóstico inicial versus los puntos de datos\n",
        "plt.plot(entrena.price, entrena.mileage, 'ro')\n",
        "plt.plot(entrena.price, y_hat*150000000.)\n",
        "plt.xlabel(\"Precio\")\n",
        "plt.ylabel(\"Millas recorridas\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "mE2vJTLbcuTs",
        "outputId": "095213e5-fc04-4603-93e2-9b150a118918"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Millas recorridas')"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "El pronostico se aproxima a los datos anteriormente mostrados, sin embargo se pueden adaptar los datos para que se muestren de una manera exacta.\n",
        "Para hacer esto es necesario normalizar los datos."
      ],
      "metadata": {
        "id": "_BpYXffVZsqE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x_datos, y_datos = (df[\"price\"].values, df[\"mileage\"].values)"
      ],
      "metadata": {
        "id": "kE4sKSeWrrRm"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se normalizan los datos"
      ],
      "metadata": {
        "id": "gD9bNgJ2vUqr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "xdatos =x_datos/max(x_datos)\n",
        "ydatos =y_datos/max(y_datos)"
      ],
      "metadata": {
        "id": "fVq3Xc25W-uo"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Entrenamos la variable Beta_1 para que la curva se aproxime lo maximo posible al conjunto de datos"
      ],
      "metadata": {
        "id": "xCh0MIKAvXDB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from scipy.optimize import curve_fit\n",
        "\n",
        "par_opt, par_cov = curve_fit(frac, xdatos, ydatos)\n",
        "\n",
        "# Imprimir los parametros encontrados\n",
        "print(\" beta_1 = %f\" % par_opt[0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JKOEnuWJaDLW",
        "outputId": "91fbb3f1-80bf-45d2-a98a-afb0c1507052"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " beta_1 = 0.023152\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora se procede a graficar el modelo de regresión resultante."
      ],
      "metadata": {
        "id": "CzKXA7-oaeV2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.linspace(18, 1000, 500)\n",
        "x = x/max(x)\n",
        "y = frac(x, *par_opt)\n",
        "\n",
        "plt.figure(figsize=(10,7))\n",
        "plt.plot(xdatos, ydatos, 'ro', label='Datos')\n",
        "plt.plot(x,y, linewidth=3.0, label='Línea de ajuste')\n",
        "plt.ylabel('IIB en Dolares')\n",
        "plt.xlabel('Años')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 442
        },
        "id": "iS7YBOViabM_",
        "outputId": "b7dfc910-7759-4ba7-8e28-04fa36d3ad9f"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Evaluacion del modelo"
      ],
      "metadata": {
        "id": "L-TtQAJyjTy2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Lo último que resta es calcular cuál es la precisión del modelo generado."
      ],
      "metadata": {
        "id": "eaFWE1cWkE1j"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "mascara = np.random.rand(len(df)) < 0.8\n",
        "entrena_x = xdatos[mascara]\n",
        "prueba_x = xdatos[~mascara]\n",
        "entrena_y = ydatos[mascara]\n",
        "prueba_y = ydatos[~mascara]\n",
        "\n",
        "# construir el modelo usando el conjunto de entrenamiento\n",
        "par_opt, par_cov = curve_fit(frac, entrena_x, entrena_y)\n",
        "\n",
        "# pronosticar usando el conjunto de pruebas\n",
        "y_hat = frac(prueba_x, *par_opt)\n",
        "\n",
        "# evaluación\n",
        "print(\"Error Absoluto Medio: %.2f\" % np.mean(np.absolute(y_hat - prueba_y)))\n",
        "print(\"Error Cuadrático Medio (MSE): %.2f\" % np.mean((y_hat - prueba_y) ** 2))\n",
        "from sklearn.metrics import r2_score\n",
        "print(\"Calificación R²: %.2f\" % r2_score(y_hat , prueba_y) )"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LmhjxmkQfuf3",
        "outputId": "e6e139be-ac43-4098-a910-b2684ad1182f"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Error Absoluto Medio: 0.06\n",
            "Error Cuadrático Medio (MSE): 0.01\n",
            "Calificación R²: -0.23\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "zQxNlvIRiDFD"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
